<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>COVID19 on Datascience, tools and datasets</title>
    <link>https://scox3.github.io/tags/covid19/</link>
    <description>Recent content in COVID19 on Datascience, tools and datasets</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>(c) Vladislav Borkus</copyright>
    <lastBuildDate>Mon, 12 Jul 2021 10:10:00 +0000</lastBuildDate><atom:link href="https://scox3.github.io/tags/covid19/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dataset, MSK COVID-19 12 July 2021</title>
      <link>https://scox3.github.io/post/2021-07-12-msk-covid-report-en/</link>
      <pubDate>Mon, 12 Jul 2021 10:10:00 +0000</pubDate>
      
      <guid>https://scox3.github.io/post/2021-07-12-msk-covid-report-en/</guid>
      <description># This is a daily report on COVID-19 Moscow dataset. Code source for this report is here.
Cyclicity estimates ## Weekly diag. cyclicity coeffs:; 1.01; 0.86; 0.83; 1.09; 1.10; 1.09; 1.06 ## Weekly hosp. cyclicity coeffs:; 0.89; 1.04; 1.01; 1.04; 1.05; 1.05; 0.94 From cyclicity coeffs we may guess that hospitalizations are really 5 days lagged relative to newly diagnosted.
Trends ## [1] 266 Latest data table ## date new_diag new_diag_corr new_diag_week_av new_hosp new_hosp_corr ## 1: 2021-07-06 5498 6360.</description>
    </item>
    
    <item>
      <title>Dataset compilation: Telegram and HTML parsing for COVID-19 epidemic data</title>
      <link>https://scox3.github.io/post/2021-03-24-parse-telegram-covid/</link>
      <pubDate>Wed, 24 Mar 2021 10:10:00 +0000</pubDate>
      
      <guid>https://scox3.github.io/post/2021-03-24-parse-telegram-covid/</guid>
      <description>The data about hospitalizations with COVID-19 in Moscow are hard to find in public datasets. However these data are daily published in the specialized Telegram channel, so they can be parsed from there to be used in data analysis.
The first step is to download Telegram chat stream. That can be easily done with the desktop Telegram client so I will skip this step and assume that the necessary data, i.</description>
    </item>
    
  </channel>
</rss>
